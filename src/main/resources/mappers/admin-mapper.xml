<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Admin">
	<resultMap type="com.finalProject.enjoin.member.model.vo.Member" id="memberResultSet">
		<!-- PRIMARY KEY -->
		<id property="userNo" column="USER_NO"/>
		<!-- 컬럼 -->
		<result property="userType" column="USER_TYPE"/>
		<result property="userId" column="USER_ID"/>
		<result property="userPwd" column="USER_PWD"/>
		<result property="userName" column="USER_NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="status" column="STATUS"/>	
		<result property="managerName" column="MANAGER_NAME"/>
		<result property="managerPhone" column="MANAGER_PHONE"/>
		<result property="managerEmail" column="MANAGER_EMAIL"/>
		<result property="copNo" column="COP_NO"/>
		<result property="ceoName" column="CEO_NAME"/>
		<result property="copName" column="COP_NAME"/>
		<result property="copAddress" column="COP_ADDRESS"/>
		<result property="copType" column="COP_TYPE"/>
		<result property="copCon" column="COP_CON"/>
		<result property="copEmail" column="COP_EMAIL"/>
		<result property="upload_name" column="UPLOAD_NAME"/>
	</resultMap>
	
	<resultMap type="Crew" id="CrewResultSet">
		<!-- Primary key  -->
		<id property="crew_Id" column="CREW_ID"/>
		<!-- 컬럼  -->
		<result property="crew_Name" column="CREW_NAME"/>
		<result property="crew_Max" column="CREW_MAX"/>
		<result property="user_No" column="USER_NO"/>
		<result property="request_Date" column="REQUEST_DATE"/>
		<result property="start_Date" column="START_DATE"/>
		<result property="end_Date" column="END_DATE"/>
		<result property="crew_Status" column="CREW_STATUS"/>
		<result property="category_No" column="CATEGORY_NO"/>
		<result property="user_Name" column="USER_NAME"/>
		<result property="upload_Name" column="UPLOAD_NAME"/>
		<result property="user_Id" column="USER_ID"/>
	</resultMap>
	
	<resultMap type="CrewRecruitmentBoard" id="CrewRecruitmentSet">
		<!-- Primary key  -->
		<id property="board_No" column="BOARD_NO"/>
		<!-- 컬럼  -->
		<result property="board_Type" column="BOARD_TYPE"/>
		<result property="board_Title" column="BOARD_TITLE"/>
		<result property="board_Content" column="BOARD_CONTENT"/>
		<result property="enroll_Date" column="ENROLL_DATE"/>
		<result property="crew_Area" column="CREW_AREA"/>
		<result property="crew_No" column="CREW_NO"/>
		<result property="board_Count" column="BOARD_COUNT"/>
		<result property="recruit_Max" column="RECRUIT_MAX"/>
		<result property="recruit_Start" column="RECRUIT_START"/>
		<result property="recruit_End" column="RECRUIT_END"/>
		<result property="recruit_Status" column="RECRUIT_STATUS"/>
		<result property="status" column="STATUS"/>
		<result property="user_No" column="USER_NO"/>
		<result property="category_No" column="CATEGORY_NO"/>
		<result property="category_Name" column="CATEGORY_NAME"/>
		<result property="upload_Name" column="UPLOAD_NAME"/>
		<result property="file_No" column="FILE_NO"/>
		<result property="category_Name" column="CATEGORY_NAME"/>
		<result property="user_Name" column="USER_NAME"/>
		<result property="user_Id" column="USER_ID"/>
	</resultMap>
	
	<resultMap type="CrewActivityBoard" id="CrewActivityBoards">
	<!-- Primary key  -->
	<id property="board_No" column="BOARD_NO"/>
		<!-- 컬럼  -->
		<result property="board_Type" column="BOARD_TYPE"/>
		<result property="board_Title" column="BOARD_TITLE"/>
		<result property="board_Content" column="BOARD_CONTENT"/>
		<result property="enroll_Date" column="ENROLL_DATE"/>
		<result property="modify_Date" column="MODIFY_DATE"/>
		<result property="start_Date" column="START_DATE"/>
		<result property="crew_Count" column="CREW_COUNT"/>
		<result property="crew_No" column="CREW_NO"/>
		<result property="board_Count" column="BOARD_COUNT"/>
		<result property="crew_Area" column="CREW_AREA"/>
		<result property="status" column="STATUS"/>
		<result property="user_No" column="USER_NO"/>
		<result property="category_No" column="CATEGORY_NO"/>
		<result property="upload_Name" column="UPLOAD_NAME"/>
		<result property="file_No" column="FILE_NO"/>
		<result property="category_Name" column="CATEGORY_NAME"/>
		<result property="user_Name" column="USER_NAME"/>
		<result property="crew_Name" column="CREW_NAME"/>
		<result property="user_Id" column="USER_ID"/>
	</resultMap>
	
	<resultMap type="AdminInformBoard" id="adminInformBoardResultSet">

	<id property="boardNo" column= "BOARD_NO"/>
	<result property="informBoardType" column="BOARD_TYPE"/>
  		<result property="informBoardTitle" column="BOARD_TITLE"/>
  		<result property="informBoardContent" column="BOARD_CONTENT"/>
  		<result property="informEnrollDate" column="ENROLL_DATE"/>
  		<result property="informModifyDate" column="MODIFY_DATE"/>
  		<result property="informPassCount" column="PASS_COUNT"/>
  		<result property="noticeMax" column="NOTICE_MAX"/>
  		<result property="noticeMin" column="NOTICE_MIN"/>
  		<result property="noticeRequest" column="NOTICE_REQUEST"/>
  		<result property="noticeEnd" column="NOTICE_END"/>
  		<result property="noticeStart" column="NOTICE_START"/>
  		<result property="noticeStatus" column="STATUS"/>
  		<result property="categoryNo" column="CATEGORY_NO"/>
  		<result property="categoryName" column="CATEGORY_NAME"/>
  		<result property="userNo" column="USER_NO"/>
  		<result property="noticeDaily" column="NOTICE_DAILY"/>
  		<result property="crewArea" column="CREW_AREA"/>
  		<result property="userId" column="USER_ID"/>
  		<result property="attNo" column="ATT_NO"/>
	</resultMap>		
	
	<!-- 일반 회원수 조회  -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER M
		WHERE M.STATUS= 'Y'
		AND M.USER_TYPE = 1
	</select>
	<!-- 일반 회원 정보 리스트 조회 -->
	<select id="memberSelect" resultMap="memberResultSet">
		SELECT USER_NO,USER_TYPE,USER_NAME,USER_ID,PHONE,EMAIL,STATUS,ENROLL_DATE,MODIFY_DATE
		FROM MEMBER
		WHERE USER_TYPE = 1
		AND STATUS = 'Y'
		ORDER BY USER_NO ASC
	</select>
	<!-- 기업 회원수 조회  -->
	<select id="getListCount1" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER M
		WHERE M.STATUS = 'Y'
		AND M.USER_TYPE = 2
	</select>
	<!-- 기업 회원 정보 리스트 조회  -->
	<select id="companyMemberSelect" resultMap="memberResultSet">
		SELECT USER_NO,COP_NO,COP_NAME ,USER_ID,MANAGER_PHONE,MANAGER_EMAIL,COP_ADDRESS,COP_EMAIL,ENROLL_DATE
		FROM MEMBER
		WHERE USER_TYPE = 2
		AND STATUS = 'Y'
		ORDER BY USER_NO ASC
	</select>
	<!-- 회원 번호로 회원 정보 조회  -->
	<select id="userNoSelect" resultMap="memberResultSet">
		SELECT USER_NO,USER_TYPE,USER_NAME,USER_ID,PHONE,EMAIL,STATUS,ENROLL_DATE,MODIFY_DATE
		FROM MEMBER
		WHERE USER_TYPE = 1
		AND STATUS = 'Y'
		AND USER_NO = #{userNo}
		ORDER BY USER_NO ASC
	</select>
	<!-- 회원 아이디를 통한 회원 정보 조회  -->
	<select id="userIdSelect" resultMap="memberResultSet">
		SELECT USER_NO,USER_TYPE,USER_NAME,USER_ID,PHONE,EMAIL,STATUS,ENROLL_DATE,MODIFY_DATE
		FROM MEMBER
		WHERE USER_TYPE = 1
		AND STATUS = 'Y'
		AND USER_Id = #{userId}
		ORDER BY USER_NO ASC
	</select>
	<!-- 회원 동일이름 리스트 갯수 -->
	<select id="getMemberNameListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER M
		WHERE M.STATUS= 'Y'
		AND M.USER_TYPE = 1
		AND M.USER_NAME = #{userName}
	</select>
	<!--회원 이름을 통한 정보 조회 -->
	<select id="userNameSelect" resultMap="memberResultSet">
		SELECT USER_NO,USER_TYPE,USER_NAME,USER_ID,PHONE,EMAIL,STATUS,ENROLL_DATE,MODIFY_DATE
		FROM MEMBER
		WHERE USER_TYPE = 1
		AND STATUS = 'Y'
		AND USER_Name = #{userName}
		ORDER BY USER_NO ASC
	</select>
	<!--회원 전화번호를 통한 정보 조회  -->
	<select id="userPhoneSelect" resultMap="memberResultSet">
		SELECT USER_NO,USER_TYPE,USER_NAME,USER_ID,PHONE,EMAIL,STATUS,ENROLL_DATE,MODIFY_DATE
		FROM MEMBER
		WHERE USER_TYPE = 1
		AND STATUS = 'Y'
		AND PHONE = #{phone}
		ORDER BY USER_NO ASC
	</select>
	<!--회원 이메일을 통한 정보 조회  -->
	<select id="userEmailSelect" resultMap="memberResultSet">
		SELECT USER_NO,USER_TYPE,USER_NAME,USER_ID,PHONE,EMAIL,STATUS,ENROLL_DATE,MODIFY_DATE
		FROM MEMBER
		WHERE USER_TYPE = 1
		AND STATUS = 'Y'
		AND EMAIL = #{email}
		ORDER BY USER_NO ASC
	</select>
	<!-- 회원 블랙처리  -->
	<update id="updateStatusMember">
		UPDATE MEMBER 
		SET STATUS = 'N',
			MODIFY_DATE = SYSDATE
		WHERE USER_NO = #{userNo}
		AND USER_TYPE = 1
	</update>
	<!-- 기업명을 통한 조회  -->
	<select id="copNameSelect" resultMap="memberResultSet">
		SELECT USER_NO,COP_NO,COP_NAME ,USER_ID,MANAGER_PHONE,MANAGER_EMAIL,COP_ADDRESS,COP_EMAIL,ENROLL_DATE
		FROM MEMBER
		WHERE USER_TYPE = 2
		AND STATUS = 'Y'
        AND COP_NAME LIKE '%'||#{copName}||'%'
        ORDER BY USER_NO ASC
	</select>
	<!-- 기업 회원 아이디를 통한 조회  -->
	<select id="copUserIdSelect" resultMap="memberResultSet">
		SELECT USER_NO,COP_NO,COP_NAME ,USER_ID,MANAGER_PHONE,MANAGER_EMAIL,COP_ADDRESS,COP_EMAIL,ENROLL_DATE
		FROM MEMBER
		WHERE USER_TYPE = 2
		AND STATUS = 'Y'
        AND USER_ID = #{userId}
        ORDER BY USER_NO ASC
	</select>
	
	<!-- 기업 회원 사업자등록번호를 통한 조회  -->
	<select id="copNoSelect" resultMap="memberResultSet">
		SELECT USER_NO,COP_NO,COP_NAME ,USER_ID,MANAGER_PHONE,MANAGER_EMAIL,COP_ADDRESS,COP_EMAIL,ENROLL_DATE
		FROM MEMBER
		WHERE USER_TYPE = 2
		AND STATUS = 'Y'
        AND COP_NO = #{copNo}
        ORDER BY USER_NO ASC
	</select>
	
	<!-- 기업 회원 담장자 이메일을 통한 조회  -->
	<select id="managerEmailSelect" resultMap="memberResultSet">
		SELECT USER_NO,COP_NO,COP_NAME ,USER_ID,MANAGER_PHONE,MANAGER_EMAIL,COP_ADDRESS,COP_EMAIL,ENROLL_DATE
		FROM MEMBER
		WHERE USER_TYPE = 2
		AND STATUS = 'Y'
        AND MANAGER_EMAIL = #{managerEmail}
        ORDER BY USER_NO ASC
	</select>
	
	<!-- 기업회원 블랙 처리  -->
	<update id="updateCopStatusMember">
		UPDATE MEMBER 
		SET STATUS = 'N',
			MODIFY_DATE = SYSDATE
		WHERE USER_NO = #{userNo}
		AND USER_TYPE = 2
	</update>
	
	<!-- 블랙 일반 회원 리스트수  -->
	<select id="getBlackListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER M
		WHERE M.STATUS = 'N'
		AND M.USER_TYPE = 1
	</select>
	
	<!--블랙 일반 회원 정보 조회  -->
	<select id="selectBlackMemberList" resultMap="memberResultSet">
		SELECT USER_NO,USER_TYPE,USER_NAME,USER_ID,PHONE,EMAIL,STATUS,ENROLL_DATE,MODIFY_DATE
		FROM MEMBER
		WHERE USER_TYPE = 1
		AND STATUS = 'N'
		ORDER BY USER_NO ASC
	</select>
	
	<!-- 블랙 기업 회원 정보 조회  -->
	<select id="getBlackListCount1" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER M
		WHERE M.STATUS = 'N'
		AND M.USER_TYPE = 2
	</select>
	
	<!--블랙 기업 회원 정보 조회  -->
	<select id="companyBlackMemberSelect" resultMap="memberResultSet">
		SELECT USER_NO,COP_NO,COP_NAME ,USER_ID,MANAGER_PHONE,MANAGER_EMAIL,COP_ADDRESS,COP_EMAIL,ENROLL_DATE
		FROM MEMBER
		WHERE USER_TYPE = 2
		AND STATUS = 'N'
		ORDER BY USER_NO ASC
	</select>
	
	<!-- 블랙 일반회원 해제 처리  -->
	<update id="updateStatusBlackMember">
		UPDATE MEMBER 
		SET STATUS = 'Y',
			MODIFY_DATE = SYSDATE
		WHERE USER_NO = #{userNo}
		AND USER_TYPE = 1
	</update>
	
	<!-- 블랙 기업회원 해제 처리  -->
	<update id="updateCopStatusBlackMember">
		UPDATE MEMBER 
		SET STATUS = 'Y',
			MODIFY_DATE = SYSDATE
		WHERE USER_NO = #{userNo}
		AND USER_TYPE = 2
	</update>
	
	<!-- 블랙 일반회원 아이디 검색  -->
	<select id="userBlackIdSelect" resultMap="memberResultSet">
		SELECT USER_NO,USER_TYPE,USER_NAME,USER_ID,PHONE,EMAIL,STATUS,ENROLL_DATE,MODIFY_DATE
		FROM MEMBER
		WHERE USER_TYPE = 1
		AND STATUS = 'N'
		AND USER_Id = #{userId}
		ORDER BY USER_NO ASC
	</select>
	
	<!-- 블랙 일반회원 이름 리스트 갯수  -->
	<select id="getBlackMemberNameListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER M
		WHERE M.STATUS= 'N'
		AND M.USER_TYPE = 1
		AND M.USER_NAME = #{userName}
	</select>
	
	<!-- 블랙 일반회원 이름으로 정보 조회  -->
	<select id="userBlackNameSelect" resultMap="memberResultSet">
		SELECT USER_NO,USER_TYPE,USER_NAME,USER_ID,PHONE,EMAIL,STATUS,ENROLL_DATE,MODIFY_DATE
		FROM MEMBER
		WHERE USER_TYPE = 1
		AND STATUS = 'N'
		AND USER_Name = #{userName}
		ORDER BY USER_NO ASC
	</select>
	
	<!-- 블랙 기업회원 상호명으로 정보 조회  -->
	<select id="copNameBlackSelect" resultMap="memberResultSet">
		SELECT USER_NO,COP_NO,COP_NAME ,USER_ID,MANAGER_PHONE,MANAGER_EMAIL,COP_ADDRESS,COP_EMAIL,ENROLL_DATE
		FROM MEMBER
		WHERE USER_TYPE = 2
		AND STATUS = 'N'
        AND COP_NAME LIKE '%'||#{copName}||'%'
        ORDER BY USER_NO ASC
	</select>
	
	<!-- 블랙 기업회원 아이디로 정보 조회  -->
	<select id="blackCopUserIdSelect" resultMap="memberResultSet">
		SELECT USER_NO,COP_NO,COP_NAME ,USER_ID,MANAGER_PHONE,MANAGER_EMAIL,COP_ADDRESS,COP_EMAIL,ENROLL_DATE
		FROM MEMBER
		WHERE USER_TYPE = 2
		AND STATUS = 'N'
        AND USER_ID = #{userId}
        ORDER BY USER_NO ASC
	</select>
	
	<!-- 크루 리스트 갯수 조회  -->
	<select id="getCrewListCount" resultType="_int">
		SELECT COUNT(*)
		FROM CREW
		WHERE CREW_STATUS = 'Y'
	</select>
	
	<!-- 크루 리스트 정보 조회  -->
	<select id="crewListSelect" resultMap="CrewResultSet">
		SELECT C.CREW_ID,C.CREW_NAME,C.CREW_MAX,M.USER_ID,C.CREW_STATUS,C.START_DATE,C1.CATEGORY_NAME
		FROM CREW C
		JOIN MEMBER M ON(C.USER_NO = M.USER_NO)
		JOIN CATEGORY C1 ON (C.CATEGORY_NO = C1.CATEGORY_NO)
		WHERE C.CREW_STATUS = 'Y'
		ORDER BY C.CREW_ID ASC
	</select>
	
	<!-- 블랙 크루 리스트 갯수 조회  -->
	<select id="getCrewBlackListCount1" resultType="_int">
		SELECT COUNT(*)
		FROM CREW
		WHERE CREW_STATUS = 'N'	
	</select>
	
	<!-- 블랙크루 리스트 정보 조회  -->
	<select id="blackCrewListSelect" resultMap="CrewResultSet">
		SELECT C.CREW_ID,C.CREW_NAME,C.CREW_MAX,M.USER_ID,C.CREW_STATUS,C.START_DATE,C1.CATEGORY_NAME
		FROM CREW C
		JOIN MEMBER M ON(C.USER_NO = M.USER_NO)
		JOIN CATEGORY C1 ON (C.CATEGORY_NO = C1.CATEGORY_NO)
		WHERE C.CREW_STATUS = 'N'
		ORDER BY C.CREW_ID ASC
	</select>
	
	<!-- 크루를 블랙상태로 만듬  -->
	<update id="updateStatusBlackCrew">
		UPDATE CREW
		SET CREW_STATUS = 'N',
			END_DATE = SYSDATE
		WHERE CREW_ID = #{crew_Id}
	</update>
	
	<!-- 크루의 블랙상태를 풀음  -->
	<update id="updateStatusCrew">
		UPDATE CREW
		SET CREW_STATUS = 'Y',
			END_DATE = SYSDATE
		WHERE CREW_ID = #{crew_Id}
	</update>
	
	<!-- 크루명을 통한 조회  -->
	<select id="crewNameSelect" resultMap="CrewResultSet">
		SELECT C.CREW_ID,C.CREW_NAME,C.CREW_MAX,M.USER_ID,C.CREW_STATUS,C.START_DATE,C1.CATEGORY_NAME
		FROM CREW C
		JOIN MEMBER M ON(C.USER_NO = M.USER_NO)
		JOIN CATEGORY C1 ON (C.CATEGORY_NO = C1.CATEGORY_NO)
		WHERE C.CREW_STATUS = 'Y'
		AND C.CREW_NAME = #{crew_Name}
		ORDER BY C.CREW_ID ASC
	</select>
	
	<!-- 크루장을 통한 조회  -->
	<select id="crewBoassSelect" resultMap="CrewResultSet">
		SELECT C.CREW_ID,C.CREW_NAME,C.CREW_MAX,M.USER_ID,C.CREW_STATUS,C.START_DATE,C1.CATEGORY_NAME
		FROM CREW C
		JOIN MEMBER M ON(C.USER_NO = M.USER_NO)
		JOIN CATEGORY C1 ON (C.CATEGORY_NO = C1.CATEGORY_NO)
		WHERE C.CREW_STATUS = 'Y'
		AND M.USER_ID = #{user_Id}
		ORDER BY C.CREW_ID ASC
	</select>
	
	<!-- 블랙크루명을 통한 조회  -->
	<select id="crewBlackName" resultMap="CrewResultSet">
		SELECT C.CREW_ID,C.CREW_NAME,C.CREW_MAX,M.USER_ID,C.CREW_STATUS,C.START_DATE,C1.CATEGORY_NAME
		FROM CREW C
		JOIN MEMBER M ON(C.USER_NO = M.USER_NO)
		JOIN CATEGORY C1 ON (C.CATEGORY_NO = C1.CATEGORY_NO)
		WHERE C.CREW_STATUS = 'N'
		AND C.CREW_NAME = #{crew_Name}
		ORDER BY C.CREW_ID ASC
	</select>
	
	<!-- 크루장을 통한 조회  -->
	<select id="crewBlackUser" resultMap="CrewResultSet">
		SELECT C.CREW_ID,C.CREW_NAME,C.CREW_MAX,M.USER_ID,C.CREW_STATUS,C.START_DATE,C1.CATEGORY_NAME
		FROM CREW C
		JOIN MEMBER M ON(C.USER_NO = M.USER_NO)
		JOIN CATEGORY C1 ON (C.CATEGORY_NO = C1.CATEGORY_NO)
		WHERE C.CREW_STATUS = 'N'
		AND M.USER_ID = #{user_Id}
		ORDER BY C.CREW_ID ASC
	</select>
	
	<!-- 크루모집 게시판 게시글 갯수 조회  -->
	<select id="getCrtListCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE STATUS = 'Y'
		AND BOARD_TYPE = '크루모집'
	</select>
	
	<!-- 크루모집 게시판 게시글 정보 조회  -->
	<select id="selectCrewRecruitmentBoardList" resultMap="CrewRecruitmentSet">
		SELECT B.BOARD_NO,C.CATEGORY_NAME,B.BOARD_CONTENT,B.BOARD_TITLE,B.CREW_AREA,
		B.BOARD_COUNT,M.USER_ID,B.ENROLL_DATE,B.USER_NO,B.CREW_NO
		FROM BOARD B
		JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
		JOIN MEMBER M ON (B.USER_NO = M.USER_NO)
		WHERE B.BOARD_TYPE = '크루모집'
		AND B.STATUS = 'Y'
		ORDER BY B.BOARD_NO ASC
	</select>
	
	<!-- 크루모집 게시판 관리자 권한으로 삭제처리  -->
	<update id="updateAdminCrewRecruitmentStatus">
		UPDATE BOARD
		SET STATUS = 'N',
		MODIFY_DATE = SYSDATE
		WHERE BOARD_TYPE = '크루모집'
		AND BOARD_NO = #{board_No}
	</update>
	
	<!-- 크루 모집 게시판 제목별 검색  -->
	<select id="selectCrewRecruitmentBoardTitle" resultMap="CrewRecruitmentSet">
		SELECT B.BOARD_NO,C.CATEGORY_NAME,B.BOARD_CONTENT,B.BOARD_TITLE,B.CREW_AREA,
		B.BOARD_COUNT,M.USER_ID,B.ENROLL_DATE,B.USER_NO,B.CREW_NO
		FROM BOARD B
		JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
		JOIN MEMBER M ON (B.USER_NO = M.USER_NO)
		WHERE B.BOARD_TYPE = '크루모집'
		AND B.STATUS = 'Y'
		AND B.BOARD_TITLE LIKE '%'||#{board_Title}||'%'
		ORDER BY B.BOARD_NO ASC
	</select>
	
	<!--크루 모집 작성자로 검색  -->
	<select id="selectCrewRecruitmentUserId" resultMap="CrewRecruitmentSet">
		SELECT B.BOARD_NO,C.CATEGORY_NAME,B.BOARD_CONTENT,B.BOARD_TITLE,B.CREW_AREA,
		B.BOARD_COUNT,M.USER_ID,B.ENROLL_DATE,B.USER_NO,B.CREW_NO
		FROM BOARD B
		JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
		JOIN MEMBER M ON (B.USER_NO = M.USER_NO)
		WHERE B.BOARD_TYPE = '크루모집'
		AND B.STATUS = 'Y'
		AND M.USER_ID = #{user_Id}
		ORDER BY B.BOARD_NO ASC
	</select>
	
	<!-- 크루활동 게시판 리스트 갯수  -->
	<select id="getActListCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE STATUS = 'Y'
		AND BOARD_TYPE = '크루활동'
	</select>
	
	<!-- 크루활동 게시판 정보 조회  -->
	<select id="selectCrewActivityBoard" resultMap="CrewActivityBoards">
		SELECT B.BOARD_NO,C.CATEGORY_NAME,B.BOARD_CONTENT,B.BOARD_TITLE,B.CREW_AREA,
		B.BOARD_COUNT,M.USER_ID,B.ENROLL_DATE,B.USER_NO,B.CREW_NO
		FROM BOARD B
		JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
		JOIN MEMBER M ON (B.USER_NO = M.USER_NO)
		WHERE B.BOARD_TYPE = '크루활동'
		AND B.STATUS = 'Y'
		ORDER BY B.BOARD_NO ASC
	</select>
	
	<!--크루활동 게시글 삭제처리  -->
	<update id="updateadminCrewActivityStatus">
		UPDATE BOARD
		SET STATUS = 'N',
		MODIFY_DATE = SYSDATE
		WHERE BOARD_TYPE = '크루활동'
		AND BOARD_NO = #{board_No}
	
	</update>
	
	 <!-- 크루 활동 게시판 제목을 통한 상세검색  -->
     <select id="selectCaSearchList" resultMap="CrewActivityBoards">
     	SELECT B.BOARD_NO,C.CATEGORY_NAME,B.BOARD_CONTENT,B.BOARD_TITLE,B.CREW_AREA,
		B.BOARD_COUNT,M.USER_ID,B.ENROLL_DATE,B.USER_NO,B.CREW_NO
		FROM BOARD B
		JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
		JOIN MEMBER M ON (B.USER_NO = M.USER_NO)
		WHERE B.BOARD_TYPE = '크루활동'
		AND B.STATUS = 'Y'
		AND B.BOARD_TITLE LIKE '%'||#{board_Title}||'%'
		ORDER BY B.BOARD_NO ASC
     </select>
     
     <!--크루 활동 작성자를 통한 조회  -->
     <select id="selectCaIdSearchList" resultMap="CrewActivityBoards">
     	SELECT B.BOARD_NO,C.CATEGORY_NAME,B.BOARD_CONTENT,B.BOARD_TITLE,B.CREW_AREA,
		B.BOARD_COUNT,M.USER_ID,B.ENROLL_DATE,B.USER_NO,B.CREW_NO
		FROM BOARD B
		JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
		JOIN MEMBER M ON (B.USER_NO = M.USER_NO)
		WHERE B.BOARD_TYPE = '크루활동'
		AND B.STATUS = 'Y'
		AND M.USER_ID = #{user_Id}
		ORDER BY B.BOARD_NO ASC
     </select>
     
     <!-- 공고게시판 리스트 카운트  -->
     <select id="getInformListCount" resultType="_int">
     	SELECT COUNT(*)
     	FROM BOARD
     	WHERE STATUS = 'Y'
     	AND BOARD_TYPE = '공고'
     </select>
     
     <!-- 공고게시판 리스트 정보 조회  --> 
     <select id="selectAdminInformBoard" resultMap="adminInformBoardResultSet">
     	SELECT B.BOARD_NO,C.CATEGORY_NAME,B.BOARD_TITLE,B.CREW_AREA,B.PASS_COUNT,
     	SUBSTR(B.NOTICE_START,1,8) AS NOTICE_START,B.BOARD_TYPE,A.ATT_NO
		FROM BOARD B
		JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
		JOIN ATTACHMENT A ON (B.BOARD_NO = A.REF_NO)
		WHERE B.STATUS = 'Y'
		AND B.BOARD_TYPE= '공고'
		AND A.FILE_NO = 1
		ORDER BY B.BOARD_NO ASC
     </select>
     
     <!-- 공고 게시글 삭제  -->
   	 <update id="updateAdminInformBoardStatus">
     	UPDATE BOARD
     	SET STATUS = 'N',
     	MODIFY_DATE = SYSDATE
     	WHERE BOARD_TYPE='공고'
     	AND BOARD_NO = #{boardNo}
     </update>
     
     <!-- 공고 제목을 통한 검색  -->
     <select id="selectInformTitle" resultMap="adminInformBoardResultSet">
     	SELECT B.BOARD_NO,C.CATEGORY_NAME,B.BOARD_TITLE,B.CREW_AREA,B.PASS_COUNT,
     	SUBSTR(B.NOTICE_START,1,8) AS NOTICE_START,B.BOARD_TYPE,A.ATT_NO
		FROM BOARD B
		JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
		JOIN ATTACHMENT A ON (B.BOARD_NO = A.REF_NO)
		WHERE B.STATUS = 'Y'
		AND B.BOARD_TYPE= '공고'
		AND A.FILE_NO = 1
		AND B.BOARD_TITLE LIKE '%'||#{informBoardTitle}||'%'
		ORDER BY B.BOARD_NO ASC
     </select>
     
     <!--블랙리스트 갯수 조회  -->
     <select id="getBlackBoardListCount" resultType="_int">
     	SELECT COUNT(*)
     	FROM BOARD
     	WHERE STATUS = 'N'
     </select>
     
     <!-- 블랙 리스트 전체 조회  -->
     <select id="selectBalckBoardList" resultMap="CrewActivityBoards">
     	SELECT B.BOARD_NO,C.CATEGORY_NAME,B.BOARD_TITLE,B.CREW_AREA,B.BOARD_TYPE,B.MODIFY_DATE,B.ENROLL_DATE
		FROM BOARD B
		JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
		WHERE B.STATUS = 'N'
		ORDER BY B.BOARD_NO ASC
     </select>
     
     <!--블랙 게시물 원래대로 돌리기  -->
     <update id="updateAdminBoardStatus">
     	UPDATE BOARD
     	SET STATUS = 'Y',
     	MODIFY_DATE = SYSDATE
     	WHERE BOARD_NO = #{board_No}
     </update>
     
     <!-- 블랙 게시물 제목으로 조회  -->
     <select id="blackTitleSelectBoard" resultMap="CrewActivityBoards">
     	SELECT B.BOARD_NO,C.CATEGORY_NAME,B.BOARD_TITLE,B.CREW_AREA,B.BOARD_TYPE,B.MODIFY_DATE,B.ENROLL_DATE
		FROM BOARD B
		JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
		WHERE B.STATUS = 'N'
		AND B.BOARD_TITLE LIKE '%'||#{board_Title}||'%'
		ORDER BY B.BOARD_NO ASC
     </select>
     
     <!-- 월별 데이터 조회  -->
     <select id="selectMonthlyincome" resultType="map" parameterType="map">
     	SELECT NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'01',PRICE)),0)AS JAN,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'02',PRICE)),0)AS FEB,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'03',PRICE)),0)AS MAR,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'04',PRICE)),0)AS APR,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'05',PRICE)),0)AS MAY,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'06',PRICE)),0)AS JUNE,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'07',PRICE)),0)AS JULY,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'08',PRICE)),0)AS AUG,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'09',PRICE)),0)AS SEP,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'10',PRICE)),0)AS OCT,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'11',PRICE)),0)AS NOV,
		        NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'MM'),'12',PRICE)),0)AS DEC
        FROM PAYMENT
        WHERE PAY_DATE BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY-MM-DD') AND SYSDATE
     </select>
     
     <!--일별 데이터 조회  -->
     <select id="selectDayincome" resultType="map" parameterType="map">
     	SELECT NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'DY'),'월',PRICE)),0)AS MON,
		       NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'DY'),'화',PRICE)),0)AS TUE,
		       NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'DY'),'수',PRICE)),0)AS WED,
		       NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'DY'),'목',PRICE)),0)AS THU,
		       NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'DY'),'금',PRICE)),0)AS FRI,
		       NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'DY'),'토',PRICE)),0)AS SAT,
		       NVL(SUM(DECODE(TO_CHAR(PAY_DATE,'DY'),'일',PRICE)),0)AS SUN
       FROM PAYMENT
       WHERE PAY_DATE BETWEEN TO_CHAR(SYSDATE - 7,'YYMMDD') AND SYSDATE
     </select>
     
     <!-- 유저 요일별 가입수치  -->
     <select id="selectUserJoinIncome" resultType="map" parameterType="map">
     	SELECT NVL(COUNT(DECODE(TO_CHAR(ENROLL_DATE,'DY'),'월',USER_NO)),0)AS MON,
		       NVL(COUNT(DECODE(TO_CHAR(ENROLL_DATE,'DY'),'화',USER_NO)),0)AS TUE,
		       NVL(COUNT(DECODE(TO_CHAR(ENROLL_DATE,'DY'),'수',USER_NO)),0)AS WED,
		       NVL(COUNT(DECODE(TO_CHAR(ENROLL_DATE,'DY'),'목',USER_NO)),0)AS THU,
		       NVL(COUNT(DECODE(TO_CHAR(ENROLL_DATE,'DY'),'금',USER_NO)),0)AS FRI,
		       NVL(COUNT(DECODE(TO_CHAR(ENROLL_DATE,'DY'),'토',USER_NO)),0)AS SAT,
		       NVL(COUNT(DECODE(TO_CHAR(ENROLL_DATE,'DY'),'일',USER_NO)),0)AS SUN
       FROM MEMBER
       WHERE ENROLL_DATE BETWEEN TO_CHAR(SYSDATE - 7,'YYMMDD') AND SYSDATE
       AND USER_TYPE != 3
     </select>
     
     <!-- 크루 요일별 가입수치  -->
     <select id="selectCrewJoinIncome" resultType="map" parameterType="map">
     	SELECT NVL(COUNT(DECODE(TO_CHAR(REQUEST_DATE,'DY'),'월',CREW_ID)),0)AS MON,
		       NVL(COUNT(DECODE(TO_CHAR(REQUEST_DATE,'DY'),'화',CREW_ID)),0)AS TUE,
		       NVL(COUNT(DECODE(TO_CHAR(REQUEST_DATE,'DY'),'수',CREW_ID)),0)AS WED,
		       NVL(COUNT(DECODE(TO_CHAR(REQUEST_DATE,'DY'),'목',CREW_ID)),0)AS THU,
		       NVL(COUNT(DECODE(TO_CHAR(REQUEST_DATE,'DY'),'금',CREW_ID)),0)AS FRI,
		       NVL(COUNT(DECODE(TO_CHAR(REQUEST_DATE,'DY'),'토',CREW_ID)),0)AS SAT,
		       NVL(COUNT(DECODE(TO_CHAR(REQUEST_DATE,'DY'),'일',CREW_ID)),0)AS SUN
       FROM CREW 
       WHERE REQUEST_DATE BETWEEN TO_CHAR(SYSDATE - 7,'YYMMDD') AND SYSDATE
     </select>
     
     <!-- 카테고리별 게시글 작성수치  -->
     <select id="selectCategoryBoardIncome" resultType="map" parameterType="map">
       SELECT NVL(COUNT(DECODE(B.CATEGORY_NO,0,C.CATEGORY_NAME)),0)AS RUNNING,
		       NVL(COUNT(DECODE(B.CATEGORY_NO,1,C.CATEGORY_NAME)),0)AS SWIMMING,
		       NVL(COUNT(DECODE(B.CATEGORY_NO,2,C.CATEGORY_NAME)),0)AS PILATES,
		       NVL(COUNT(DECODE(B.CATEGORY_NO,3,C.CATEGORY_NAME)),0)AS MARTIAL,
		       NVL(COUNT(DECODE(B.CATEGORY_NO,4,C.CATEGORY_NAME)),0)AS DANCE,
		       NVL(COUNT(DECODE(B.CATEGORY_NO,5,C.CATEGORY_NAME)),0)AS YOGA,
		       NVL(COUNT(DECODE(B.CATEGORY_NO,6,C.CATEGORY_NAME)),0)AS HEALTH,
		       NVL(COUNT(DECODE(B.CATEGORY_NO,7,C.CATEGORY_NAME)),0)AS CROSSFIT,
		       NVL(COUNT(DECODE(B.CATEGORY_NO,8,C.CATEGORY_NAME)),0)AS OTHER
       FROM BOARD B
       JOIN CATEGORY C ON (B.CATEGORY_NO = C.CATEGORY_NO)
       WHERE B.STATUS = 'Y'
     </select>
     
     <!--제휴 승인대기 리스트 갯수  -->
     <select id="getfacilityAccept" resultType="_int">
     	SELECT COUNT(*)
		FROM FACILITY
		WHERE FACILITY_STATUS = 'N'
     </select>
     
     <!--제휴 승인 리스트  -->
     <select id="selectfacilityAccept" resultType="map" parameterType="map">
     	SELECT FACILITY_COPNO,SUBSTR(FACILITY_REQUESTDATE,1,8) AS FACILITY_REQUESTDATE,
	        FACILITY_NAME,FACILITY_ADDRESS,FACILITY_EVENT,FACILITY_NO,
	        FACILITY_MANAGER_NAME,FACILITY_MANAGER_PHONE
			FROM FACILITY
			WHERE FACILITY_STATUS = 'N'
     </select>
     
     <!-- 제휴 승인  -->
     
     <update id="updateStatusFacility">
     	UPDATE FACILITY
		SET FACILITY_STATUS = 'Y'
		WHERE FACILITY_NO = #{FACILITY_NO} 
     </update>
     
     <!-- 제휴대기중 업체명으로 검색하기  -->
     <select id="selectfacilityNoneSearchList" resultType="map" parameterType="map">
     	SELECT FACILITY_COPNO,SUBSTR(FACILITY_REQUESTDATE,1,8) AS FACILITY_REQUESTDATE,
	        FACILITY_NAME,FACILITY_ADDRESS,FACILITY_EVENT,FACILITY_NO,
	        FACILITY_MANAGER_NAME,FACILITY_MANAGER_PHONE
			FROM FACILITY
			WHERE FACILITY_STATUS = 'N'
			AND FACILITY_NAME LIKE '%'||#{facility_Name}||'%'
     </select>
     
     <!--제휴 등록된 리스트 갯수 조회  -->
     <select id="getfacilityList" resultType="_int">
     	SELECT COUNT(*)
     	FROM FACILITY
     	WHERE FACILITY_STATUS = 'Y'
     </select>
     
     <!-- 제휴 등록된 리스트 조회  -->
     <select id="facilityList" resultType="map" parameterType="map">
     	SELECT FACILITY_COPNO,SUBSTR(FACILITY_REQUESTDATE,1,8) AS FACILITY_REQUESTDATE,
	        FACILITY_NAME,FACILITY_ADDRESS,FACILITY_EVENT,FACILITY_NO,
	        FACILITY_MANAGER_NAME,FACILITY_MANAGER_PHONE
			FROM FACILITY
			WHERE FACILITY_STATUS = 'Y'
     </select>
     
     <!--제휴 검색한 리스트 조회  -->
     <select id="facilitySearchList" resultType="map" parameterType="map">
     	SELECT FACILITY_COPNO,SUBSTR(FACILITY_REQUESTDATE,1,8) AS FACILITY_REQUESTDATE,
	        FACILITY_NAME,FACILITY_ADDRESS,FACILITY_EVENT,FACILITY_NO,
	        FACILITY_MANAGER_NAME,FACILITY_MANAGER_PHONE
			FROM FACILITY
			WHERE FACILITY_STATUS = 'Y'
			AND FACILITY_NAME LIKE '%'||#{facility_Name}||'%'
     </select>
     
     
     <!-- 제휴 시설삭제 리스트 갯수 조회  -->
     <select id="getfacilityDelectList" resultType="_int">	
     	SELECT COUNT(*)
		FROM FACILITY
		WHERE FACILITY_STATUS = 'D'
     </select>
     
     <!-- 제휴 시설 삭제리스트 조회  -->
     <select id="selectFacilityDelectList" resultType="map" parameterType="map">
     	SELECT FACILITY_COPNO,SUBSTR(FACILITY_REQUESTDATE,1,8) AS FACILITY_REQUESTDATE,
	        FACILITY_NAME,FACILITY_ADDRESS,FACILITY_EVENT,FACILITY_NO,
	        FACILITY_MANAGER_NAME,FACILITY_MANAGER_PHONE
			FROM FACILITY
			WHERE FACILITY_STATUS = 'D'
     </select>
     
     <!--제휴 삭제  -->
     <update id="statusFacilityDelete">
     	UPDATE FACILITY
		SET FACILITY_STATUS = 'D', FACILITY_ENDDATE = SYSDATE
		WHERE FACILITY_NO = #{FACILITY_NO} 
     </update>
     
     <!-- 제휴 시설 삭제 복원  -->
     <update id="updateStatusFacilityY">
     	UPDATE FACILITY
		SET FACILITY_STATUS = 'Y' , FACILITY_STARTDATE = SYSDATE
		WHERE FACILITY_NO = #{FACILITY_NO} 
     </update>
     
     <!-- 제휴시설 삭제리스트 업체명으로 조회  -->
     <select id="selectFacilityDelectSearchList" resultType="map" parameterType="map">
     	SELECT FACILITY_COPNO,SUBSTR(FACILITY_REQUESTDATE,1,8) AS FACILITY_REQUESTDATE,
	        FACILITY_NAME,FACILITY_ADDRESS,FACILITY_EVENT,FACILITY_NO,
	        FACILITY_MANAGER_NAME,FACILITY_MANAGER_PHONE
			FROM FACILITY
			WHERE FACILITY_STATUS = 'D'
			AND FACILITY_NAME LIKE '%'||#{facility_Name}||'%'
     </select>
     
     <!-- 제휴 시설 삭제 리스트 갯수 조회  -->
     <select id="getfacilityWDelectList" resultType="_int">
     	SELECT COUNT(*)
		FROM FACILITY
		WHERE FACILITY_STATUS = 'W'
     </select>
     
     <!-- 제휴 시설 삭제 리스트 조회  -->
     <select id="selectFacilityWDelectList" resultType="map" parameterType="map">
     	SELECT FACILITY_COPNO,SUBSTR(FACILITY_REQUESTDATE,1,8) AS FACILITY_REQUESTDATE,
	        FACILITY_NAME,FACILITY_ADDRESS,FACILITY_EVENT,FACILITY_NO,
	        FACILITY_MANAGER_NAME,FACILITY_MANAGER_PHONE
			FROM FACILITY
			WHERE FACILITY_STATUS = 'W'
     </select>
     
     <!-- 제휴시설 삭제리스트 업체명으로 조회   -->
      <select id="selectFacilityWDelectSearchList" resultType="map" parameterType="map">
     	SELECT FACILITY_COPNO,SUBSTR(FACILITY_REQUESTDATE,1,8) AS FACILITY_REQUESTDATE,
	        FACILITY_NAME,FACILITY_ADDRESS,FACILITY_EVENT,FACILITY_NO,
	        FACILITY_MANAGER_NAME,FACILITY_MANAGER_PHONE
			FROM FACILITY
			WHERE FACILITY_STATUS = 'W'
			AND FACILITY_NAME LIKE '%'||#{facility_Name}||'%'
     </select> 
</mapper>
